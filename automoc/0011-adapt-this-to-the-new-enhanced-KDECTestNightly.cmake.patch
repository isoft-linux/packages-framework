From 6abca8eb52509b218d41c4d00fe56c74ca3331d6 Mon Sep 17 00:00:00 2001
From: Alexander Neundorf <neundorf@kde.org>
Date: Fri, 8 May 2009 20:33:00 +0000
Subject: [PATCH 11/33] -adapt this to the new enhanced KDECTestNightly.cmake
 script (need current kdesdk for running Nightly builds)

Alex



svn path=/trunk/kdesupport/automoc/; revision=965402
---
 Automoc4Nightly.cmake |  21 ++++++++---
 KDECTestNightly.cmake | 100 --------------------------------------------------
 2 files changed, 16 insertions(+), 105 deletions(-)
 delete mode 100644 KDECTestNightly.cmake

diff --git a/Automoc4Nightly.cmake b/Automoc4Nightly.cmake
index 6b63d15..8504f98 100644
--- a/Automoc4Nightly.cmake
+++ b/Automoc4Nightly.cmake
@@ -1,17 +1,28 @@
-set(CTEST_VCS svn)
-set(CTEST_VCS_REPOSITORY https://svn.kde.org/home/kde/trunk/kdesupport/automoc)
+set(KDE_CTEST_VCS svn)
+set(KDE_CTEST_VCS_REPOSITORY https://svn.kde.org/home/kde/trunk/kdesupport/automoc)
 set(CTEST_CMAKE_GENERATOR "Unix Makefiles" )
 
 # set(CTEST_AVOID_SPACES FALSE)
 
-get_filename_component(_currentDir "${CMAKE_CURRENT_LIST_FILE}" PATH)
+# generic support code, provides the kde_ctest_setup() macro, which sets up everything required:
+file(TO_CMAKE_PATH  $ENV{KDECTESTNIGHTLY_DIR}  KDECTESTNIGHTLY_DIR)
+include( "${KDECTESTNIGHTLY_DIR}/KDECTestNightly.cmake"  OPTIONAL  RESULT_VARIABLE fileIncluded)
 
-# generic support code, sets up everything required:
-include( "${_currentDir}/KDECTestNightly.cmake" )
+if(NOT fileIncluded)
+   message(FATAL_ERROR "Did not find file ${KDECTESTNIGHTLY_DIR}/KDECTestNightly.cmake . 
+Set the environment variable KDECTESTNIGHTLY_DIR  to the directory where this file is located. 
+In KDE svn it is in kdesdk/cmake/modules/ ")
+endif(NOT fileIncluded)
+
+kde_ctest_setup("${CMAKE_CURRENT_LIST_FILE}")
 
 ctest_empty_binary_directory("${CTEST_BINARY_DIRECTORY}")
 ctest_start(Nightly)
 ctest_update(SOURCE "${CTEST_SOURCE_DIRECTORY}" )
+
+include("${CTEST_SOURCE_DIRECTORY}/CTestConfig.cmake")
+include("${CTEST_SOURCE_DIRECTORY}/CTestCustom.cmake" OPTIONAL)
+
 ctest_configure(BUILD "${CTEST_BINARY_DIRECTORY}" )
 ctest_build(BUILD "${CTEST_BINARY_DIRECTORY}" )
 ctest_test(BUILD "${CTEST_BINARY_DIRECTORY}" )
diff --git a/KDECTestNightly.cmake b/KDECTestNightly.cmake
deleted file mode 100644
index f28c0b0..0000000
--- a/KDECTestNightly.cmake
+++ /dev/null
@@ -1,100 +0,0 @@
-# The following variables are set by the script if they haven't been set before:
-#
-# CTEST_SOURCE_DIRECTORY - defaults to $HOME/Dashboards/<CTEST_PROJECT_NAME>/src dir/
-# CTEST_BINARY_DIRECTORY - defaults to $HOME/Dashboards/<CTEST_PROJECT_NAME>/build dir/
-# if CTEST_AVOID_SPACES is TRUE, the spaces in the path above will be removed.
-# CTEST_BUILD_NAME - the name of the build as displayed by cdash
-
-
-###########################################################
-# generic code
-###########################################################
-
-cmake_minimum_required(VERSION 2.6)
-
-include(CMakeDetermineSystem)
-if(CMAKE_HOST_UNIX)
-   include(Platform/UnixPaths)
-endif(CMAKE_HOST_UNIX)
-
-if(CMAKE_HOST_WIN32)
-   include(Platform/WindowsPaths)
-endif(CMAKE_HOST_WIN32)
-
-get_filename_component(currentDirectory "${CMAKE_CURRENT_LIST_FILE}" PATH)
-
-if(NOT EXISTS "${currentDirectory}/CMakeLists.txt")
-   message(FATAL_ERROR "This script must be in the source tree of your project.")
-endif(NOT EXISTS "${currentDirectory}/CMakeLists.txt")
-
-include("${currentDirectory}/CTestConfig.cmake")
-include("${currentDirectory}/CTestCustom.cmake" OPTIONAL)
-
-
-site_name(CTEST_SITE)
-
-if(NOT CTEST_BUILD_NAME)
-   set(CTEST_BUILD_NAME ${CMAKE_SYSTEM_NAME})
-endif(NOT CTEST_BUILD_NAME)
-
-
-if("${CTEST_CMAKE_GENERATOR}" MATCHES Makefile)
-   find_program(MAKE_EXECUTABLE make gmake)
-   set(CTEST_BUILD_COMMAND    "${MAKE_EXECUTABLE}" )
-else("${CTEST_CMAKE_GENERATOR}" MATCHES Makefile)
-   if(NOT DEFINED CTEST_BUILD_COMMAND)
-      message(FATAL_ERROR "CTEST_CMAKE_GENERATOR is set to \"${CTEST_CMAKE_GENERATOR}\", but CTEST_BUILD_COMMAND has not been set")
-   endif(NOT DEFINED CTEST_BUILD_COMMAND)
-endif("${CTEST_CMAKE_GENERATOR}" MATCHES Makefile)
-
-
-############# set up CTEST_SOURCE_DIRECTORY and CTEST_BINARY_DIRECTORY #############
-set(DASHBOARD_DIR "$ENV{HOME}/Dashboards" )
-
-if(NOT DEFINED CTEST_SOURCE_DIRECTORY)
-   if(CTEST_AVOID_SPACES)
-      set(CTEST_SOURCE_DIRECTORY "${DASHBOARD_DIR}/${CTEST_PROJECT_NAME}/srcdir" )
-   else(CTEST_AVOID_SPACES)
-      set(CTEST_SOURCE_DIRECTORY "${DASHBOARD_DIR}/${CTEST_PROJECT_NAME}/src dir" )
-   endif(CTEST_AVOID_SPACES)
-endif(NOT DEFINED CTEST_SOURCE_DIRECTORY)
-
-if(NOT DEFINED CTEST_BINARY_DIRECTORY)
-   if(CTEST_AVOID_SPACES)
-      set(CTEST_BINARY_DIRECTORY "${DASHBOARD_DIR}/${CTEST_PROJECT_NAME}/builddir" )
-   else(CTEST_AVOID_SPACES)
-      set(CTEST_BINARY_DIRECTORY "${DASHBOARD_DIR}/${CTEST_PROJECT_NAME}/build dir" )
-   endif(CTEST_AVOID_SPACES)
-endif(NOT DEFINED CTEST_BINARY_DIRECTORY)
-
-
-############### set up VCS support ###################
-
-string(TOLOWER ${CTEST_VCS} _ctest_vcs)
-set(_have_vcs FALSE)
-# only set this if there is no checkout yet
-set(CTEST_CHECKOUT_COMMAND)
-
-if ("${_ctest_vcs}" STREQUAL svn)
-   find_program(SVN_EXECUTABLE svn)
-   if (NOT SVN_EXECUTABLE)
-      message(FATAL_ERROR "Error: CTEST_VCS is svn, but could not find svn executable")
-   endif (NOT SVN_EXECUTABLE)
-   set(CTEST_UPDATE_COMMAND ${SVN_EXECUTABLE})
-   if(NOT EXISTS "${CTEST_SOURCE_DIRECTORY}/.svn/entries")
-      set(CTEST_CHECKOUT_COMMAND "${SVN_EXECUTABLE} co ${CTEST_VCS_REPOSITORY}/${CTEST_VCS_PATH} \"${CTEST_SOURCE_DIRECTORY}\"")
-   endif(NOT EXISTS "${CTEST_SOURCE_DIRECTORY}/.svn/entries")
-   set(_have_vcs TRUE)
-endif ("${_ctest_vcs}" STREQUAL svn)
-
-if ("${_ctest_vcs}" STREQUAL cvs)
-   find_program(CVS_EXECUTABLE cvs cvsnt)
-   if (NOT CVS_EXECUTABLE)
-      message(FATAL_ERROR "Error: CTEST_VCS is cvs, but could not find cvs or cvsnt executable")
-   endif (NOT CVS_EXECUTABLE)
-   set(CTEST_UPDATE_COMMAND ${CVS_EXECUTABLE})
-   if(NOT EXISTS "${CTEST_SOURCE_DIRECTORY}/CVS/Entries")
-      set(CTEST_CHECKOUT_COMMAND "${CVS_EXECUTABLE} -d ${CTEST_VCS_REPOSITORY} co  -d \"${CTEST_SOURCE_DIRECTORY}\" ${CTEST_VCS_PATH}")
-   endif(NOT EXISTS "${CTEST_SOURCE_DIRECTORY}/CVS/Entries")
-   set(_have_vcs TRUE)
-endif ("${_ctest_vcs}" STREQUAL cvs)
-- 
2.4.3

